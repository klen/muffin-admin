[project]
name = "muffin-admin"
version = "11.1.0"
description = "Admin interface for Muffin Framework"
authors = [{ name = "Kirill Klenov", email = "horneds@gmail.com" }]
requires-python = ">3.10"
readme = "README.rst"
license = "MIT"
keywords = ["admin", "api", "muffin", "asgi", "asyncio", "trio"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Internet :: WWW/HTTP",
  "Framework :: AsyncIO",
  "Framework :: Trio",
]
dependencies = ["muffin", "muffin-rest", "typing-extensions ; python_version <= '3.10'"]

[project.optional-dependencies]
yaml = ["pyyaml"]
peewee = ["muffin-peewee-aio", "marshmallow-peewee"]
sqlalchemy = ["muffin-databases", "marshmallow-sqlalchemy", "sqlalchemy"]

[project.urls]
Homepage = "https://github.com/klen/muffin-admin"
Repository = "https://github.com/klen/muffin-admin"

[dependency-groups]
dev = [
  "aiofile",
  "aiosqlite",
  "marshmallow-peewee",
  "marshmallow-sqlalchemy",
  "muffin-databases",
  "muffin-peewee-aio",
  "pytest",
  "pytest-aio[curio, trio]",
  "pytest-mypy",
  "pyyaml",
  "ruff",
  "pre-commit",
  "black",
]
example = ["uvicorn", "mixer", "peewee", "muffin-peewee-aio", "muffin-databases", "httptools"]

[tool.uv]
default-groups = ["dev", "example"]

[tool.hatch.build.targets.sdist]
include = ["muffin_admin", "muffin_admin/main.js", "muffin_admin/main.js.LICENSE.txt"]

[tool.hatch.build.targets.wheel]
include = ["muffin_admin", "muffin_admin/main.js", "muffin_admin/main.js.LICENSE.txt"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
addopts = "-xsv"

[tool.mypy]
packages = ["muffin_admin"]
ignore_missing_imports = true

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py310,py311,py312,py313,pypy310

[testenv]
deps = -e .[dev]
allowlist_externals =
  uv
commands =
  uv sync
	uv run pytest --mypy tests

[testenv:pypy310]
deps = -e .[dev]
commands =
	pytest tests
"""

[tool.ruff]
fix = false
line-length = 100
target-version = "py310"
exclude = [".venv", "docs", "examples"]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "A003",
  "ARG003",
  "ANN",
  "COM",
  "D",
  "DJ",
  "EM",
  "N804",
  "PLR0912",
  "PLR2004",
  "RET",
  "RSE",
  "S101",
  "SLF",
  "TRY003",
  "UP",
]

[tool.black]
line-length = 100
target-version = ["py310", "py311", "py312", "py313"]
preview = true

[tool.bumpversion]
current_version = "11.1.0"
commit = false
tag = false

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[[tool.bumpversion.files]]
filename = "frontend/package.json"
search = '"version": "{current_version}"'
replace = '"version": "{new_version}"'

[[tool.bumpversion.files]]
filename = "frontend/src/index.tsx"
search = 'export const VERSION = "{current_version}"'
replace = 'export const VERSION = "{new_version}"'
