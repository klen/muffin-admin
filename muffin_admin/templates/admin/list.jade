extends admin/base.jade

block title
  title #{active.name} -- list

block content

  include admin/mixins.jade

  - var base_url = app.ps.admin.options.prefix + '/' + active.name.lower()

  ul.nav.nav-tabs(role="tablist")
    li.active: a(href="#list") List
    if form
      li: a(href="#create", data-toggle="modal", data-target="#create") Create 

      #create.modal.fade: .modal-dialog: .modal-content
        .modal-header: h4 Create #{active.name}
        .modal-body
          form.form(method="POST", action="#{base_url}")
            for field in form
                +render_field(field, None)
        .modal-footer
            button.btn.btn-success.btn-create(type="submit") Create
            button.btn.btn-danger.btn-reset(href="#reset") Reset
            button.btn.btn-default(data-dismiss="modal") Cancel

  table.table.table-striped.table-hover.admin-list

    // Columns
    thead: tr
      th(style="width:40px")
      for column in active.columns
        th
          .dropdown
            a.dropdown-toggle(data-toggle="dropdown", href="#")
              span(data-toggle="tooltip", title="sort")
                =column.title()
            ul.dropdown-menu
              li.dropdown-header Sorting
              li: a(href="#{base_url}?_ordering=#{column}")
                span.glyphicon.glyphicon-arrow-down
                |  Ascending
              li: a(href="#{base_url}?_ordering=-#{column}")
                span.glyphicon.glyphicon-arrow-up
                |  Descending
      th(style="width:40px")

    tbody

      for item in list(active.collection)
        tr(id="item-#{item.id}", data-pk="#{item.id}")

          // Edit dialog
          td
              if form
                a.btn.btn-xs.btn-default(href="#{base_url}?pk=#{item.id}", data-toggle="modal", data-target="#edit-#{item.id}")
                  span.glyphicon.glyphicon-pencil(data-toggle="tooltip", title="edit")
                .modal.fade(id="edit-#{item.id}")
                  .modal-dialog
                    .modal-content

          for column in active.columns
            td #{active.render_value(item, column)}

          // Delete dialog
          td
            if active.delete
              .btn.btn-xs.btn-danger(data-toggle="modal", data-target="#delete-#{item.id}")
                  span.glyphicon.glyphicon-trash(data-toggle="tooltip", title="delete")
              .modal.fade(id="delete-#{item.id}")
                .modal-dialog
                  .modal-content
                    .modal-header: h4 Are you sure want to delete #{active.name} ##{item.id}?
                    .modal-body
                      for column in active.columns
                        b #{active.render_value(item, column)} &nbsp;
                    .modal-footer
                      button.btn.btn-danger.btn-delete Delete
                      button.btn.btn-default(data-dismiss="modal") Cancel


block js-admin
  script

    (function ($) {
      "use strict";

      $(function(){

        // Initialize tooltips
        $('[data-toggle="tooltip"]').tooltip();

        // Delete items
        $('.btn-delete').click(function(){
          $(this).button('toggle');
          var item = $(this).parents('tr')[0], id = $(item).data('pk'), modal=$(this).parents('.modal');
          $.ajax({
            url: window.base_url + '?pk=' + id,
            method: 'DELETE',
            success: function () {
              modal.modal('toggle');
              $('#item-' + id).hide(600);
            }
          });
        });

        // Reset a form
        $('.btn-reset').click(function(e){
          e.preventDefault();
          var parents = $(this).parents('.modal');
          parents.find('form').trigger('reset');
          parents.find('.has-error').removeClass('has-error');
          parents.find('.help-block').remove();
        });

        // Submit modal forms
        $(window.document).on('click', 'button[type="submit"]', function(){
          $(this).parents('.modal').find('form').submit();
        });

        // Parse modal forms
        $(window.document).on('submit', 'form', function(e){
          e.preventDefault();
          var $this = $(this),
              posting = $.post($this.attr('action'), $this.serialize());

          $this.find('.has-error').removeClass('has-error');
          $this.find('.help-block').remove();

          posting.done(function(){ window.location.reload();}).fail(function(data){
            var errors = data.responseJSON;
            $.each(errors, function(c, errors) {
              var parent = $this.find('#' + c).parent();
              parent.addClass('has-error');
              $.each(errors, function(c, e){
                  parent.append('<p class="help-block">' + e + '</p>');
              });
            });
          });
        });

      });
      
    }(jQuery));

  script.
    var base_url = '#{base_url}';
